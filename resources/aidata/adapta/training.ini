[TrainingInfo]
#how many matches each vector is tested in before being evaluated. <=0 means that the number of matches is auto-determined by the init.js file, according on how many maps are chosen to cycle in
MatchNumberTarget = -1
#file where to load population on start
PopulationFileName = "resources/aidata/adapta/pop_record_last.json"
#stop training after this amount of generations
MaxGenerationCount = 300
#stop training if a requested target fitness is reached
StopAtTargetFitness = true
TargetFitness = 1
#how to evaluate fitness function. See AdaptaEnums.h, adaenums::evalType
#available: "VICTORY_COUNT_ONLY" "PLAYER_VALUE_PREDEPLOYED"
EvaluationType = "PLAYER_VALUE_PREDEPLOYED"
#follow the player in slot 0 of mapselection. This is set in the init.js file in base folder (or in templates folder when building)
TrainingPlayer = 0


[SaveInfo]
#indexes and params to save circularly N files, and keep a history of N files. Start overwriting from the NextSaveIndex
NextSaveIndex = 0
MaxSaveIndex = 50
SaveNamePrefix = "resources/aidata/adapta/pop_record_"
SaveNameExtension = ".json"

#where to save a copy of the most recent save
SaveNameMostRecent = "resources/aidata/adapta/pop_record_last.json"
#save a new population when a new best fitness is found?
SaveOnNewBestFit = true
#if a fitness is found which is better than at least one of the best records, save it immediately before the generation ends
InstantSaveOnNewBest = true
#Save in any case after N generations passed without any new save? If > 0 this specifies this amount
GenerationNumberTargetSave = 1
#Keep a separate file in where are stored N vectors, representing the best fitnesses of all time.
#Specify how many should be stored and where
BestRecordsToSave = 24

SaveNameBestRecords = "resources/aidata/adapta/best_records_alltime.json"

[CurrentState]
#this is the current state that can be saved if the training should stop while in the middle of computing performances of a generation
#(todo complete the savestate stuff in case of halting the training mid-run, since some stuff is missing)
CurrWVIndex = 0
CurrWVMatchNumber = 0
CurrBestSavedFitness = -0.8700799942016602

[EvolutionManager]
#if true, load a population from specified file, if false start from a random population
LoadPopulation = false
#if true, load the best fit vectors of all time from file, if there is one. If false the previous best vectors will be overridden, if the file of best records is the same
LoadBestRecords = false
#params to set the evolution manager's characteristics
PopulationSize = 30
#this can be overridden if requested by a module to have a specific size
WeightVectorLength = 4
#at each new gen, copy this amount of best vectors of the previous gen
ElitismDegree = 4
#at each new gen, create this amount of totally random new vectors. This should be an element of exploration kept alive
RandomismDegree = 2
#start from this generation. It doesn't affect evolution
Generation = 0
#if this is set, MinWeight and MaxWeight won't be used, but instead 2 masks which states minimum and maximum weight for each position will be used, based on the type of assignment (see EvoEnums.h MinMaxWeightMask) and file given
UseMinMaxWeightMasks = true
WeightMaskType = MIN_MODULE_MASK
WeightMaskFile = "resources/aidata/adapta/MINextermination.ini"
#min and max weights amounts the population vectors can have.
MinWeight = -10
MaxWeight = 10
#min and max fitnesses
MinFitness = -2
MaxFitness = 2
#see EvoEnums.h (0 is splitMiddle, 1 is splitRandom, 2 is mixRandom, 3 is custom)
CrossoverFunctionType = 2
#see EvoEnums.h (0 is individualRandom)
MutationFunctionType = 0

[TransferLearning]
#set if the population should set some weights based on other files
DoTransferLearning = true
#MIN for MIN modules (MultiInfluenceNetwork)
TransferLearningType = MIN
#file used for info of origin where to get the learning
TLOriginFile = "resources/aidata/adapta/minExterminationTL.ini"
#file used for info of where to transfer the knowledge
TLTargetFile = "resources/aidata/adapta/minExtermination.ini"
#if true, the transferred weights cannot be learned anymore
FixTransferredWeights = false